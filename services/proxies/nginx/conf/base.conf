log_format lab '$remote_addr - $remote_user [$time_local] "$request" '
                'status=$status uri="$uri" req_uri="$request_uri" args="$args" loc="$loc" '
                'host="$host" ref="$http_referer" ua="$http_user_agent" xff="$http_x_forwarded_for"';

server {
    listen 80;
    underscores_in_headers on;  # allow incoming headers with underscores (e.g., SCRIPT_NAME)
    access_log /var/log/nginx/access.log lab;
    # default location alias (overridden per location)
    set $loc "server";

    # Resolve container hostnames at request time via Docker DNS
    resolver 127.0.0.11 ipv6=off;
    # Backend host variables
    set $py_host backend-python;
    set $php_host backend-php;

    # Include per-backend location configs
    include /etc/nginx/conf.d/python.inc;
    include /etc/nginx/conf.d/php.inc;

    

    # Proxy defaults aiming to be transparent-ish
    location / {
        set $loc "root";
        proxy_pass http://$py_host:8000/public/;  # default: forward everything to /public
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        # Expose Nginx view of URI variables to backend
        proxy_set_header X-NGX-Request-URI $request_uri;
        proxy_set_header X-NGX-URI $uri;
        proxy_set_header X-NGX-Args $args;
        proxy_set_header Connection '';
        proxy_buffering off;
        proxy_request_buffering on;
        client_max_body_size 50m;
    }

    
}
